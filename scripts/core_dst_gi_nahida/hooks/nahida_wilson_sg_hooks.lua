---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2025/4/19 17:52
---
-- 清理函数，确保状态正确恢复
local function CleanupNahidaSkillState(inst)
    -- 移除无敌状态
    if inst.components.health then
        inst.components.health:SetInvincible(false)
    end

    -- 移除控制免疫标签
    inst:RemoveTag("heavyarmor")

    -- 恢复头盔护甲
    local armor = inst.components.inventory:GetEquippedItem(EQUIPSLOTS.HEAD)
    if armor and armor.components.armor and armor._saved_armor_takedamage then
        armor.components.armor.TakeDamage = armor._saved_armor_takedamage
        armor._saved_armor_takedamage = nil
        -- 取消延迟恢复任务
        if armor._invincible_restore_task then
            armor._invincible_restore_task:Cancel()
            armor._invincible_restore_task = nil
        end
    end

    -- 恢复身体护甲
    local armor2 = inst.components.inventory:GetEquippedItem(EQUIPSLOTS.BODY)
    if armor2 and armor2.components.armor and armor2._saved_armor_takedamage2 then
        armor2.components.armor.TakeDamage = armor2._saved_armor_takedamage2
        armor2._saved_armor_takedamage2 = nil
        -- 取消延迟恢复任务
        if armor2._invincible_restore_task then
            armor2._invincible_restore_task:Cancel()
            armor2._invincible_restore_task = nil
        end
    end

    -- 取消技能超时任务
    if inst._nahida_skill_timeout_task then
        inst._nahida_skill_timeout_task:Cancel()
        inst._nahida_skill_timeout_task = nil
    end
end

-- 定义状态信息表
local StategraphStateList = {
    {
        wilson = {
            name = "nahida_dst_gi_nahida_illusory_heart",
            tags = {
                "busy",
                "nointerrupt",
                "nopredict",
                "nostun",      -- 免疫眩晕
                "nofreeze",    -- 免疫冰冻
                "nosleep",     -- 免疫睡眠
                "noaoestun"    -- 免疫AOE眩晕
            },

            onenter = function(inst)
                inst:PerformBufferedAction()
                inst.components.locomotor:Stop()
                inst.AnimState:OverrideSymbol("naxida_dazhao_fx", "dst_gi_nahida_illusory_heart", "naxida_dazhao_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_illusory_heart", false)

                -- 设置无敌状态
                inst.components.health:SetInvincible(true)
                inst:AddTag("heavyarmor") -- 免疫控制标签

                -- 保存并禁用头盔护甲
                local armor = inst.components.inventory:GetEquippedItem(EQUIPSLOTS.HEAD)
                if armor and armor.components.armor then
                    armor._saved_armor_takedamage = armor.components.armor.TakeDamage
                    armor.components.armor.TakeDamage = function() end
                end

                -- 保存并禁用身体护甲
                local armor2 = inst.components.inventory:GetEquippedItem(EQUIPSLOTS.BODY)
                if armor2 and armor2.components.armor then
                    armor2._saved_armor_takedamage2 = armor2.components.armor.TakeDamage
                    armor2.components.armor.TakeDamage = function() end
                end

                -- 添加安全超时机制，防止状态卡住
                inst._nahida_skill_timeout_task = inst:DoTaskInTime(10, function()
                    if inst.sg and inst.sg.currentstate and inst.sg.currentstate.name == "nahida_dst_gi_nahida_illusory_heart" then
                        CleanupNahidaSkillState(inst)
                        inst.sg:GoToState("idle")
                    end
                end)
            end,
            events = {
                EventHandler("animover", function(inst)
                    CleanupNahidaSkillState(inst)
                    inst.sg:GoToState("idle")
                end),
            },
            -- 确保在任何情况下退出状态时都能正确清理
            onexit = function(inst)
                CleanupNahidaSkillState(inst)
            end,
        },
        wilson_client = {
            name = "nahida_dst_gi_nahida_illusory_heart",
            tags = { "busy", "nointerrupt" },
            onenter = function(inst)
                inst.components.locomotor:Stop()
                inst.AnimState:OverrideSymbol("naxida_dazhao_fx", "dst_gi_nahida_illusory_heart", "naxida_dazhao_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_illusory_heart", false)
                inst:PerformPreviewBufferedAction()
            end,
            events = {
                EventHandler("animover", function(inst)
                    -- 清除标记：元素爆发结束
                    inst.sg:GoToState("idle")
                end),
            }
        }
    },
    {
        wilson = {
            name = "dst_gi_nahida_attack1",
            tags = { "busy", "nointerrupt", "nopredict" },
            onenter = function(inst)
                inst:PerformBufferedAction()
                inst.AnimState:OverrideSymbol("atk_fx", "dst_gi_nahida_attack_v2", "atk_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_attack1", false)
                inst.SoundEmitter:PlaySound("nahida_attack_1_sound/nahida_attack_1_sound/nahida_attack_1_sound")
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("idle")
                end),
            }
        },
        wilson_client = {
            name = "dst_gi_nahida_attack1",
            tags = { "busy", "nointerrupt" },
            onenter = function(inst)
                inst.AnimState:OverrideSymbol("atk_fx", "dst_gi_nahida_attack_v2", "atk_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_attack1", false)
                inst.SoundEmitter:PlaySound("nahida_attack_1_sound/nahida_attack_1_sound/nahida_attack_1_sound")
                inst:PerformPreviewBufferedAction()
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("idle")
                end),
            }
        }
    },
    {
        wilson = {
            name = "dst_gi_nahida_attack2",
            tags = { "busy", "nointerrupt", "nopredict" },
            onenter = function(inst)
                inst:PerformBufferedAction()
                inst.AnimState:OverrideSymbol("atk_fx", "dst_gi_nahida_attack_v2", "atk_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_attack2", false)
                inst.SoundEmitter:PlaySound("nahida_attack_2_sound/nahida_attack_2_sound/nahida_attack_2_sound")
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("idle")
                end),
            }
        },
        wilson_client = {
            name = "dst_gi_nahida_attack2",
            tags = { "busy", "nointerrupt" },
            onenter = function(inst)
                inst.AnimState:OverrideSymbol("atk_fx", "dst_gi_nahida_attack_v2", "atk_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_attack2", false)
                inst.SoundEmitter:PlaySound("nahida_attack_2_sound/nahida_attack_2_sound/nahida_attack_2_sound")
                inst:PerformPreviewBufferedAction()
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("idle")
                end),
            }
        }
    },
    {
        wilson = {
            name = "dst_gi_nahida_attack3",
            tags = { "busy", "nointerrupt", "nopredict" },
            onenter = function(inst)
                inst:PerformBufferedAction()
                inst.AnimState:OverrideSymbol("atk_fx", "dst_gi_nahida_attack_v2", "atk_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_attack3", false)
                inst.SoundEmitter:PlaySound("nahida_attack_3_sound/nahida_attack_3_sound/nahida_attack_3_sound")
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("idle")
                end),
            }
        },
        wilson_client = {
            name = "dst_gi_nahida_attack3",
            tags = { "busy", "nointerrupt" },
            onenter = function(inst)
                inst.AnimState:OverrideSymbol("atk_fx", "dst_gi_nahida_attack_v2", "atk_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_attack3", false)
                inst.SoundEmitter:PlaySound("nahida_attack_3_sound/nahida_attack_3_sound/nahida_attack_3_sound")
                inst:PerformPreviewBufferedAction()
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("idle")
                end),
            }
        }
    },
    {
        wilson = {
            name = "dst_gi_nahida_attack4",
            tags = { "busy", "nointerrupt", "nopredict" },
            onenter = function(inst)
                inst:PerformBufferedAction()
                inst.AnimState:OverrideSymbol("atk_fx", "dst_gi_nahida_attack_v2", "atk_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_attack4", false)
                inst.SoundEmitter:PlaySound("nahida_attack_4_sound/nahida_attack_4_sound/nahida_attack_4_sound")
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("idle")
                end),
            }
        },
        wilson_client = {
            name = "dst_gi_nahida_attack4",
            tags = { "busy", "nointerrupt" },
            onenter = function(inst)
                inst.AnimState:OverrideSymbol("atk_fx", "dst_gi_nahida_attack_v2", "atk_fx")
                inst.AnimState:PlayAnimation("dst_gi_nahida_attack4", false)
                inst.SoundEmitter:PlaySound("nahida_attack_4_sound/nahida_attack_4_sound/nahida_attack_4_sound")
                inst:PerformPreviewBufferedAction()
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("idle")
                end),
            }
        }
    },
    {
        wilson = {
            name = "dst_gi_nahida_playguitar_start",
            tags = { "nointerrupt", "nopredict" },
            onenter = function(inst)
                inst:PerformBufferedAction()
                inst.AnimState:OverrideSymbol("swap_object", "dst_gi_nahida_playguitar", "swap_object")
                inst.AnimState:PlayAnimation("dst_gi_nahida_playguitar_start", false)
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("dst_gi_nahida_playguitar_doing")
                end),
                EventHandler("equip", function(inst)
                    inst.AnimState:Hide("ARM_carry")
                    inst.AnimState:Show("ARM_normal")
                end),
                EventHandler("unequip", function(inst)
                    inst.AnimState:Hide("ARM_carry")
                    inst.AnimState:Show("ARM_normal")
                end),
            }
        },
        wilson_client = {
            name = "dst_gi_nahida_playguitar_start",
            tags = { "nointerrupt" },
            onenter = function(inst)
                inst.AnimState:OverrideSymbol("swap_object", "dst_gi_nahida_playguitar", "swap_object")
                inst.AnimState:PlayAnimation("dst_gi_nahida_playguitar_start", false)
                inst:PerformPreviewBufferedAction()
            end,
            events = {
                EventHandler("animover", function(inst)
                    inst.sg:GoToState("dst_gi_nahida_playguitar_doing")
                end),
                EventHandler("equip", function(inst)
                    inst.AnimState:Hide("ARM_carry")
                    inst.AnimState:Show("ARM_normal")
                end),
                EventHandler("unequip", function(inst)
                    inst.AnimState:Hide("ARM_carry")
                    inst.AnimState:Show("ARM_normal")
                end),
            }
        }
    },
    {
        wilson = {
            name = "dst_gi_nahida_playguitar_doing",
            tags = { "playing" }, -- 移除 "nointerrupt" 和 "nopredict"
            onenter = function(inst)
                inst.AnimState:OverrideSymbol("swap_object", "dst_gi_nahida_playguitar", "swap_object")
                inst.AnimState:PlayAnimation("dst_gi_nahida_playguitar_doing", true)
            end,
            onexit = function(inst)
                inst:PushEvent("dst_gi_nahida_playguitar_end")
            end,
            events = {
                EventHandler("equip", function(inst)
                    inst.AnimState:Hide("ARM_carry")
                    inst.AnimState:Show("ARM_normal")
                end),
                EventHandler("unequip", function(inst)
                    inst.AnimState:Hide("ARM_carry")
                    inst.AnimState:Show("ARM_normal")
                end),
            }
        },
        wilson_client = {
            name = "dst_gi_nahida_playguitar_doing",
            tags = { "playing" }, -- 移除 "nointerrupt"
            onenter = function(inst)
                inst.AnimState:OverrideSymbol("swap_object", "dst_gi_nahida_playguitar", "swap_object")
                inst.AnimState:PlayAnimation("dst_gi_nahida_playguitar_doing", true)
                inst:PerformPreviewBufferedAction()
            end,
            onexit = function(inst)
                inst:PushEvent("dst_gi_nahida_playguitar_end")
            end,
            events = {
                EventHandler("equip", function(inst)
                    inst.AnimState:Hide("ARM_carry")
                    inst.AnimState:Show("ARM_normal")
                end),
                EventHandler("unequip", function(inst)
                    inst.AnimState:Hide("ARM_carry")
                    inst.AnimState:Show("ARM_normal")
                end),
            }
        }
    }
}

-- 遍历状态信息表，添加状态
for _, state_info in ipairs(StategraphStateList) do
    -- 服务端状态
    AddStategraphState("wilson",
            State {
                name = state_info.wilson.name,
                tags = state_info.wilson.tags,
                onenter = state_info.wilson.onenter,
                onexit = state_info.wilson.onexit,
                events = state_info.wilson.events,
            }
    )

    -- 客户端状态
    AddStategraphState("wilson_client",
            State {
                name = state_info.wilson_client.name,
                tags = state_info.wilson_client.tags,
                onenter = state_info.wilson_client.onenter,
                onexit = state_info.wilson_client.onexit,
                events = state_info.wilson_client.events,
            }
    )
end

local function get_attack_sg(inst,weapon)
    if inst and inst:HasTag(TUNING.AVATAR_NAME) and weapon and weapon:HasTag(TUNING.AVATAR_NAME.."_normal_attack") then
        -- weapon:RemoveTag("mygo_prop_attack")
        local attack_num = inst.attack_num
        if attack_num == nil or attack_num == 4 then
            attack_num = 0
        end
        inst.attack_num = attack_num + 1

        if inst.attack_task ~= nil then
            inst.attack_task:Cancel()
        end
        inst.attack_task = inst:DoPeriodicTask(1, function()
            inst.attack_num = 0
            if inst.attack_task ~= nil then
                inst.attack_task:Cancel()
            end
            inst.attack_task = nil
        end)
        return "dst_gi_nahida_attack"..inst.attack_num
    end
end

AddStategraphPostInit("wilson", function(sg)
    local old_ATTACK = sg.actionhandlers[ACTIONS.ATTACK].deststate
    sg.actionhandlers[ACTIONS.ATTACK].deststate = function(inst, action, ...)
        local weapon = inst.components.combat:GetWeapon()
        return get_attack_sg(inst,weapon) or old_ATTACK(inst, action, ...)
    end
end)
AddStategraphPostInit("wilson_client", function(sg)
    local old_ATTACK = sg.actionhandlers[ACTIONS.ATTACK].deststate
    sg.actionhandlers[ACTIONS.ATTACK].deststate = function(inst, action, ...)
        local weapon = inst.replica.combat:GetWeapon()
        return get_attack_sg(inst,weapon) or old_ATTACK(inst, action, ...)
    end
end)
